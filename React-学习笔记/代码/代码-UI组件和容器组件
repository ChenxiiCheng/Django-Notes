1.UI组件和容器组件：
（1）UI组件负责页面的渲染【傻瓜组件】
（2）容器组件负责页面的逻辑 【聪明组件】

2.无状态组件【其实就是一个函数】
当一个组件只有render时，我们可以用一个无状态组件，性能高，因为它就是一个函数
原本的是一个类，有各种生命周期函数，性能相对低

当我们把UI组件和容器组件分开时，大部分的UI组件都可以写成无状态组件




//TodiList.js
import React, { Component } from 'react';
import 'antd/dist/antd.css';
import store from './store';
import TodolistUI from './TodoListUI';
import {
  getInputChangeAction,
  getAddItemAction,
  getDeleteItemAction
} from './store/actionCreators';

class TodoList extends Component {
  constructor(props) {
    super(props);
    this.state = store.getState();
    this.handleInputChange = this.handleInputChange.bind(this);
    this.handleStoreChange = this.handleStoreChange.bind(this);
    this.handleBtnClick = this.handleBtnClick.bind(this);
    this.handleItemDelete = this.handleItemDelete.bind(this);
    store.subscribe(this.handleStoreChange);
  }

  render() {
    return (
      <TodolistUI
        inputValue={this.state.inputValue}
				list={this.state.list}
        handleInputChange={this.handleInputChange}
        handleBtnClick={this.handleBtnClick}
        handleItemDelete={this.handleItemDelete}
      />
    );
  }

  handleInputChange(e) {
    const action = getInputChangeAction(e.target.value);
    store.dispatch(action);
  }

  handleStoreChange() {
    this.setState(store.getState());
  }

  handleBtnClick() {
    const action = getAddItemAction();
    store.dispatch(action);
  }

  handleItemDelete(index) {
    const action = getDeleteItemAction(index);
    store.dispatch(action);
  }
}

export default TodoList;







//TodoListUI.js
import React, { Component, Fragment } from 'react';
import { Input, Button, List } from 'antd';

//无状态组件
const TodoListUI = props => {
  return (
    <Fragment>
      <div style={{ marginTop: '10px', marginLeft: '10px' }}>
        <Input
          placeholder="todo info"
          value={props.inputValue}
          style={{ width: '300px', marginRight: '10px' }}
          onChange={props.handleInputChange}
        />
        <Button type="danger" onClick={props.handleBtnClick}>
          提交
        </Button>
        <List
          style={{ marginTop: '10px', width: '300px' }}
          bordered
          dataSource={props.list}
          renderItem={(item, index) => (
            <List.Item
              onClick={index => {
                props.handleItemDelete(index);
              }}
            >
              {item}
            </List.Item>
          )}
        />
      </div>
    </Fragment>
  );
};

// class TodoListUI extends Component {
//   render() {
//     return (
//       <Fragment>
//         <div style={{ marginTop: '10px', marginLeft: '10px' }}>
//           <Input
//             placeholder="todo info"
//             value={this.props.inputValue}
//             style={{ width: '300px', marginRight: '10px' }}
//             onChange={this.props.handleInputChange}
//           />
//           <Button type="danger" onClick={this.props.handleBtnClick}>
//             提交
//           </Button>
//           <List
//             style={{ marginTop: '10px', width: '300px' }}
//             bordered
//             dataSource={this.props.list}
//             renderItem={(item, index) => (
//               <List.Item
//                 onClick={index => {
//                   this.props.handleItemDelete(index);
//                 }}
//               >
//                 {item}
//               </List.Item>
//             )}
//           />
//         </div>
//       </Fragment>
//     );
//   }
// }

export default TodoListUI;
